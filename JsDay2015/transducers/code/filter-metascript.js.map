{"version":3,"sources":["filter-metascript.mjs"],"names":["R","require","fs","inspect","log","curry","m","v","console","_$2","filename","argv","time","input","readFileSync","isGet","test","RegExp","notStatic","__$arg$1","isPage","splitLine","pattern","match","null","shift","_$4","toURL","prepend","split","slice","join","transformSecondItem","f","pair","secondItemToUrl","secondItemToUrlUsingZip","pipe","zip","identity","map","processor","filter","result","timeEnd"],"mappings":"AAAA,I,CAAA,E,EAAA,E,OAAA,E,GAAA,E,QAAA,E,KAAA,E,KAAA,E,SAAA,E,MAAA,E,SAAA,E,KAAA,E,mBAAA,E,eAAA,E,uBAAA,E,SAAA,E,MAAA,E,GAAA,E,GAAA,C;AAAA;AAAA;AAAA,QACEA,CAAE,GAAEC,OAAO,SAAT,CADJ;AAAA,QAEEC,EAAG,GAAED,OAAO,MAAT,CAFL;AAAA,QAGEE,OAAQ,GAAEF,OAAO,QAAQ,CAACE,OAAlB,CAHV;AAAA;AAAA,IAKAC,GAAQ,GAAEJ,CAAC,CAACK,KACV,WAAAC,CAAA,EAAEC,CAAF;AAAA,Y,GAAA,E,GAAA;AAAA,QACE;AAAA,YAAAC,OAAO,CAACJ,GAAG,CAAC,MAAO,GAAEE,CAAE,GAAE,GAAd,GAAoBH,OAAO,CAAAI,CAAA,CAA3B,EAAX;AAAA,YACAE,GAAA,GAAAF,CAAA,CADA;AAAA;AAAA,SADF;AAAA,eACEE,GADF;AAAA,MADM,CALR;AAAA,IAUAC,QAAa,GAAET,OAAO,WAAW,CAACU,IAAI,GAAI,IAAG,gBAAhC,CAVb;AAAA,IAYAH,OAAO,CAACI,IAAI,QAZZ;AAAA,IAaAC,KAAU,GAAEX,EAAE,CAACY,YAAY,CAAAJ,QAAA,EAAS,EAAa,U,EAAA,MAAb,EAAT,CAAjB,CAbV;AAAA,IAeAK,KAAU,GAAEf,CAAC,CAACgB,IAAI,KAAKC,MAAL,CAAY,SAAZ,EAAR,CAfV;AAAA,IAgBAC,SAAc,GAAE,UAAAC,QAAA;AAAA,eAAI,CAAGnB,CAAC,CAACgB,IAAH,CAAQ,IAAIC,MAAJ,CAAW,eAAX,CAAR,EAAkCE,QAAlC,CAAN;AAAA,KAAF,CAhBd;AAAA,IAiBAC,MAAW,GAAE,UAAAD,QAAA;AAAA,eAAKJ,KAAD,CAAOI,QAAP,CAAY,IAAID,SAAD,CAAWC,QAAX,CAAnB;AAAA,KAAF,CAjBX;AAAA,IAmBAE,SAAc,GAAE,UAAAF,QAAA;AAAA,Y,OAAA,E,CAAA,E,GAAA,E,GAAA,E,GAAA,E,GAAA;AAAA,QACd;AAAA,YAAAG,OAAY,GAAE,4BAAF,CAAZ;AAAA,YACAhB,CAAM,GAAEa,QAAG,CAACI,KAAM,KAAKN,MAAL,CAAYK,OAAZ,EAAZ,CADN;AAAA,YAEA,IAAIhB,CAAD,KAAMkB,IAAT,EAAe;AAAA;AAAA,oBACblB,CAAC,CAACmB,KAAK,GADM;AAAA,oBAEbC,GAAA,GAAApB,CAAA,CAFa;AAAA;AAAA;AAAA,aAAf,MAGK;AAAA,gBAAAoB,GAAA,GAAAF,IAAA;AAAA,aALL;AAAA,YAEAf,GAAA,GAAAiB,GAAA,CAFA;AAAA;AAAA,SADc;AAAA,eACdjB,GADc;AAAA,KAAF,CAnBd;AAAA,IA2BAkB,KAAU,GAAE,UAAAR,QAAA;AAAA,eAGRnB,CAAC,CAAC4B,OAAO,yBAFTT,QAAG,CAACU,KAAK,KACR,CAACC,KAAK,IAAE,CAAF,CACE,CACR,CAACC,IAAK,IAJC;AAAA,KAAF,CA3BV;AAAA,IAiCAC,mBAAwB,GAAEhC,CAAC,CAACK,KAC1B,WAAA4B,CAAA,EAAEC,IAAF;AAAA,eAAa;AAAA,YAACA,IAAI,GAAL;AAAA,YAAUD,CAAC,CAACC,IAAD,CAAK,CAAL,EAAX;AAAA,SAAb;AAAA,MADsB,CAjCxB;AAAA,IAmCAC,eAAoB,GAAEH,mBAAmB,CAAAL,KAAA,CAArB,CAnCpB;AAAA,IAqCAS,uBAA4B,GAAEpC,CAAC,CAACqC,IAC9B,CAAArC,CAAC,CAACsC,GAAG;AAAA,QAAEtC,CAAC,CAACuC,QAAJ;AAAA,QAAYZ,KAAZ;AAAA,MAAL,EACA3B,CAAC,CAACwC,GAAG,WAAEN,IAAF;AAAA,eAAYA,IAAI,GAAI,CAACA,IAAD,CAAK,CAAL,EAApB;AAAA,MADL,CAD0B,CArC5B;AAAA,IA0CAO,SAAc,GAAE,UAAAtB,QAAA;AAAA,eAEZnB,CAAC,CAAC0C,MAAM,CAAA3B,KAAA,EADRI,QAAG,CAACU,KAAK,MACD,CACP,CAACW,GAAI,CAAAnB,SAAA,CACL,CAACmB,GAAI,CAAAL,eAAA,CACL,CAACK,GAAG,CAACxC,CAAC,CAAC+B,IAAH,CAAO,WAAP,EACJ,CAACS,GAAG,WAAArB,QAAA;AAAA,mBAAKA,QAAI,GAAE,IAAX;AAAA,UANO;AAAA,KAAF,CA1Cd;AAAA,IAmDAX,OAAO,CAACI,IAAI,eAnDZ;AAAA,IAoDA+B,MAAW,GAAE3C,CAAC,CAAC+B,IAAI,KAAKU,SAAS,CAAA5B,KAAA,CAAd,CAAR,CApDX;AAAA,IAsDAL,OAAO,CAACoC,OAAO,eAtDf;AAAA,IAuDApC,OAAO,CAACoC,OAAO,QAvDf;AAAA","sourcesContent":["var\n  R = require('ramda')\n  fs = require('fs')\n  inspect = require('util').inspect\n\nvar log = R.curry\n  (m, v) ->\n    console.log('LOG ' + m + ':' + inspect(v))\n    v\n\nvar filename = require('process').argv[2] || 'data-small.log'\n\nconsole.time('All')\nvar input = fs.readFileSync(filename, {encoding: 'utf8'})\n\nvar isGet = R.test(new RegExp 'GET \\\\/')\nvar notStatic = #-> ! (R.test(new RegExp 'GET \\\\/static', #it))\nvar isPage = #-> (isGet #it) && (notStatic #it)\n\nvar splitLine = #->\n  var pattern = '^([0-9\\\\.]+)[^\"]+\"([^\"]+)/'\n  var m = #it.match (new RegExp pattern)\n  if (m != null) do\n    m.shift()\n    m\n  else null\n\nvar toURL = #-> |:\n    #it.split(' ')\n    #.slice(1, 2)\n    R.prepend('http://my-domain.com', #)\n    #.join ''\n\nvar transformSecondItem = R.curry\n  (f, pair) -> [pair[0], f(pair[1])]\nvar secondItemToUrl = transformSecondItem(toURL);\n\nvar secondItemToUrlUsingZip = R.pipe\n  R.zip([R.identity, toURL])\n  R.map( (pair) -> pair[0] (pair[1]))\n\n\nvar processor = #-> |:\n    #it.split('\\n')\n    R.filter(isGet, #)\n    #.map splitLine\n    #.map secondItemToUrl\n    #.map(R.join(' visited '))\n    #.map(#-> #it + '\\n')\n\n\nconsole.time('Processing');\nvar result = R.join('', processor(input))\n; var result = R.into('', R.identity, processor(input));\nconsole.timeEnd('Processing')\nconsole.timeEnd('All')\n\n; console.log (result)\n\n"]}